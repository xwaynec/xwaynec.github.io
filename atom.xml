<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wayne-WH.Chen Blog]]></title>
  <link href="http://xwaynec.github.io/atom.xml" rel="self"/>
  <link href="http://xwaynec.github.io/"/>
  <updated>2013-11-24T02:58:34+08:00</updated>
  <id>http://xwaynec.github.io/</id>
  <author>
    <name><![CDATA[xwaynec]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[294 - Divisors]]></title>
    <link href="http://xwaynec.github.io/blog/2013/11/23/294-divisors/"/>
    <updated>2013-11-23T18:02:17+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/11/23/294-divisors</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include&lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;math.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;memory.h&gt;</span>
</span><span class='line'><span class="cm">/*Divisors */</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">sample</span><span class="p">,</span><span class="n">lower</span><span class="p">,</span><span class="n">upper</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">s</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">m</span><span class="p">,</span><span class="n">max</span><span class="p">,</span><span class="n">maxnum</span><span class="p">,</span><span class="n">divisor</span><span class="p">,</span><span class="n">prime</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">is_prime</span><span class="p">[</span><span class="mi">31623</span><span class="p">];</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">is_prime</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">31623</span><span class="p">);</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">31623</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">is_prime</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="n">i</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="mi">31623</span><span class="p">;</span><span class="n">k</span><span class="o">=</span><span class="n">k</span><span class="o">+</span><span class="n">i</span><span class="p">){</span>
</span><span class='line'>                <span class="n">is_prime</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;294.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">sample</span><span class="p">);</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">sample</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">lower</span><span class="p">,</span><span class="o">&amp;</span><span class="n">upper</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Between %d and %d, &quot;</span><span class="p">,</span><span class="n">lower</span><span class="p">,</span><span class="n">upper</span><span class="p">);</span>
</span><span class='line'>        <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">sqrt</span><span class="p">(</span><span class="n">upper</span><span class="p">)</span><span class="o">+</span><span class="mf">0.001</span><span class="p">);</span>
</span><span class='line'>        <span class="n">max</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">maxnum</span> <span class="o">=</span> <span class="n">lower</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">s</span><span class="o">=</span><span class="n">lower</span><span class="p">;</span><span class="n">s</span><span class="o">&lt;=</span><span class="n">upper</span><span class="p">;</span><span class="n">s</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'>            <span class="n">divisor</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">m</span><span class="o">&amp;&amp;</span><span class="n">tmp</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>                <span class="k">if</span><span class="p">((</span><span class="n">is_prime</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">tmp</span><span class="o">%</span><span class="n">j</span><span class="o">==</span><span class="mi">0</span><span class="p">)){</span>
</span><span class='line'>                    <span class="n">prime</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">while</span><span class="p">(</span><span class="n">tmp</span><span class="o">%</span><span class="n">j</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>                        <span class="n">prime</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>                        <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span> <span class="o">/</span> <span class="n">j</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="n">divisor</span> <span class="o">=</span> <span class="n">divisor</span> <span class="o">*</span> <span class="p">(</span><span class="n">prime</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">tmp</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">divisor</span> <span class="o">=</span> <span class="n">divisor</span> <span class="o">*</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">divisor</span> <span class="o">&gt;</span> <span class="n">max</span><span class="p">){</span>
</span><span class='line'>                <span class="n">max</span> <span class="o">=</span> <span class="n">divisor</span><span class="p">;</span>
</span><span class='line'>                <span class="n">maxnum</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d has a maximum of %d divisors.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">maxnum</span><span class="p">,</span><span class="n">max</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tywin Lannister Quote]]></title>
    <link href="http://xwaynec.github.io/blog/2013/06/15/tywin-lannister-quote/"/>
    <updated>2013-06-15T09:28:00+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/06/15/tywin-lannister-quote</id>
    <content type="html"><![CDATA[<p>A nice quote by Tywin Lannister taken from <em>A Storm of Sword</em> book.</p>

<blockquote><p>The greatest fools are ofttimes more clever then the men who laugh at them.</p><footer><strong>Tywin Lannister</strong> <cite>A Storm of Swords</cite></footer></blockquote>

]]></content>
  </entry>
  
</feed>

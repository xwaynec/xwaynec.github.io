<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wayne-WH.Chen Blog]]></title>
  <link href="http://xwaynec.github.io/atom.xml" rel="self"/>
  <link href="http://xwaynec.github.io/"/>
  <updated>2013-12-07T17:10:29+08:00</updated>
  <id>http://xwaynec.github.io/</id>
  <author>
    <name><![CDATA[xwaynec]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ACM:305 - Joseph]]></title>
    <link href="http://xwaynec.github.io/blog/2013/12/06/acm-305-Joseph/"/>
    <updated>2013-12-06T15:21:27+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/12/06/acm-305-Joseph</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include&lt;stdio.h&gt;</span>
</span><span class='line'><span class="cm">/* Joseph  */</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">f</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="kt">int</span> <span class="n">m</span><span class="p">,</span> <span class="n">n</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">r</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">for</span> <span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">k</span><span class="p">,</span> <span class="n">m</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;;</span> <span class="n">m</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">r</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span> <span class="n">r</span> <span class="o">&gt;</span> <span class="n">k</span><span class="p">;</span> <span class="n">r</span><span class="o">--</span><span class="p">)</span>
</span><span class='line'>         <span class="k">if</span> <span class="p">((</span><span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="n">p</span> <span class="o">+</span> <span class="n">m</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">r</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">k</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">r</span> <span class="o">==</span> <span class="n">k</span><span class="p">)</span> <span class="k">return</span> <span class="n">m</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">icase</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">ans</span><span class="p">[</span><span class="mi">15</span><span class="p">];</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">14</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="n">ans</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">f</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">icase</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">icase</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">ans</span><span class="p">[</span><span class="n">icase</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Baltic Sea 3 Countries - Poland Warsaw (1)]]></title>
    <link href="http://xwaynec.github.io/blog/2013/12/02/baltic-sea-3-countries-poland-warsaw-1/"/>
    <updated>2013-12-02T04:44:28+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/12/02/baltic-sea-3-countries-poland-warsaw-1</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-3ce44IBDLYo/Upt-qHiYOmI/AAAAAAAAi9o/2AI5lJA0JPs/w2316-h1544-no/325A4007.jpg" alt="" /></p>

<p>這次出國去了東歐-波羅的海三小國 立陶宛(Lithuania)、拉脫維亞(Latvia)、愛沙尼亞(Estonia)，去之前先在波蘭(Poland)呆了7天。
這幾篇記錄一下當時去了哪裡，再不記就要忘記啦&hellip;，飛機飛三段0rz，台灣先飛到香港，香港飛到芬蘭赫爾辛基機場，再轉到波蘭的華沙。</p>

<h3>芬蘭 赫爾辛基機場</h3>

<p><img src="https://lh6.googleusercontent.com/-urvwJJNBdfM/Upt_ECUczFI/AAAAAAAAi8A/GXng1FKFvsY/w2346-h1564-no/325A3882.jpg" alt="芬蘭赫爾辛基機場" /></p>

<p><img src="https://lh6.googleusercontent.com/-EEozcXV50q4/Upt_EN7etcI/AAAAAAAAi70/zV2El9DMWXE/s0/325A3885.jpg" alt="芬蘭赫爾辛基機場2" /></p>

<p><img src="https://lh4.googleusercontent.com/-wZVFa84s7rQ/UqLk6pweTeI/AAAAAAAAjEI/8J9OMfE7HGI/w1030-h1544-no/325A3887.jpg" alt="芬蘭赫爾辛基機場3" /></p>

<p><img src="https://lh5.googleusercontent.com/-ZtgRGyW96IA/UqLk6v2JUoI/AAAAAAAAjEI/VjG8bpveKU4/w2316-h1544-no/325A3891.jpg" alt="" /></p>

<!-- more -->


<p>華沙機場是用蕭邦爲名 (Lotnisko Chopina)，從機場任一個Terminal都可以搭到175號公車，終點站是舊城區。</p>

<h3>Hostel</h3>

<p>出了機場之後，換了兩次train之後先到hostel放行李，<a href="http://www.okidoki.pl/">OKI DOKI hostel</a> 這間hostel不錯，唯一的缺點就是沒電梯，行李如果太重應該會崩潰，好險行李只有16kg。</p>

<p><img src="https://lh5.googleusercontent.com/-HoN7WszKvPg/Upt-qJzRAJI/AAAAAAAAi80/MKjOoVyVi9A/w1050-h1574-no/325A4033.jpg" alt="OKI DOKI" /></p>

<p><img src="https://lh4.googleusercontent.com/-cVsKMsy1aAQ/UqLk6lIKR3I/AAAAAAAAjEI/hDAenj3aOwI/w1030-h1544-no/325A3893.jpg" alt="" /></p>

<p>抓了一堆歐洲地圖，漫畫風格。</p>

<p><img src="https://lh6.googleusercontent.com/-1BzFZAF7sCo/UqLk6pKSMUI/AAAAAAAAjEI/Ad94vt9dP_g/w2316-h1544-no/325A3897.jpg" alt="" /></p>

<h3>Warsaw 市區</h3>

<p>恩&hellip;.先去換錢XD，東歐這幾個國家都還是用自己的錢幣，所以還是要把歐元換成波蘭幣。</p>

<p><img src="https://lh5.googleusercontent.com/-pwNpqGDqynY/UqHr9Did-rI/AAAAAAAAjBA/zor-2vWfAEA/w2346-h1564-no/325A3902.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/--nDPbWOjOgM/UqHr9OaRPLI/AAAAAAAAjA0/NIv2votUTPo/w1050-h1576-no/325A3903.jpg" alt="" /></p>

<p>這幾天天氣陰陰的，路上還滿空曠的。</p>

<p><img src="https://lh3.googleusercontent.com/-BvD1de0kSTY/Up4ttj1gwhI/AAAAAAAAi_4/OJFBwTwK0i8/w2346-h1564-no/325A3904.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-fPpK_tXnKQU/Up4ttp_5f_I/AAAAAAAAi_8/xo9o6AEBIGw/w2346-h1564-no/325A3909.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-7fXyo3PUTPo/Up4ttphFSUI/AAAAAAAAjAA/89LBpHtRUtQ/w2346-h1564-no/325A3911.jpg" alt="" /></p>

<h3>蕭邦博物館 Fryderyk Chopin Museum</h3>

<p>地址: Okólnik 1, Warszawa, Poland。 只能說這地方真的是太屌了，一堆手稿。博物館裡面大多就是介紹蕭邦的生平，從出生到在華沙成名，後來被迫離開波蘭。這個博物館算是高科技博物館了，有一區是利用電子紙張的方式來介紹蕭邦的作品。</p>

<p><img src="https://lh5.googleusercontent.com/-49SvvvhZdAI/Up4ttmbOiOI/AAAAAAAAjAE/3OJz9Oq7TGs/w2346-h1564-no/325A3926.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-POU08_jEexw/Upt-qGwDCmI/AAAAAAAAi9M/MEUlEZDyz2g/w2346-h1564-no/325A3938.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-w2nCrIdsHzw/Upt-qGu23yI/AAAAAAAAi8g/-1IeqJ7oqfE/w2346-h1564-no/325A3934.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-FZ6XRnDO6g4/UqHr9LSe2fI/AAAAAAAAjAw/eeP7IzTzx-Q/w2346-h1564-no/325A3959.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-vYKzNMcQF4I/Upt-qCVNXcI/AAAAAAAAi58/d1cf1PVfDUo/w2346-h1564-no/325A3947.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-eslEHcKi5i8/Upt-qME4jXI/AAAAAAAAi6I/GyN1rBvwPBk/w2346-h1564-no/325A3948.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-jkfgSN_3gYk/UqLjKxwbHVI/AAAAAAAAjDo/AFbPxVSxlq8/w1030-h1544-no/325A3944.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-eVDjgXzzj4w/UqLjKx5P0sI/AAAAAAAAjDo/t4mOTkXFe00/w2316-h1544-no/325A3950.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-UiKxschhX4I/UqLjK0wiXvI/AAAAAAAAjDo/4E52XV6q2es/w1030-h1544-no/325A3953.jpg" alt="" /></p>

<h2>皇家之路 Royal Route</h2>

<p>皇家之路開始於華沙的城堡廣場，向南經過克拉科夫郊區街、新世界街（ulica Nowy Świat）、烏亞茲多夫大道（Aleje Ujazdowskie）、 貝爾韋街（ulica Belwederska）、梭畢也斯基街（ulica Sobieskiego），最後到達維拉諾王宮。</p>

<h3>新世紀街</h3>

<p>新世紀街南起三十字廣場(Plac trzech krzyży)，向北與耶路撒冷大道(Aleje Jerozolimskie)和聖十字街(Ulica Świętokrzyska)交匯。新世紀街北到華沙大學和哥白尼紀念碑。再更北就是<a href="http://zh.wikipedia.org/wiki/%E5%85%8B%E6%8B%89%E7%A7%91%E5%A4%AB%E9%83%8A%E5%8C%BA%E8%A1%97">克拉科夫郊區街</a>(Krakowskie Przedmieście)。</p>

<p>逛完博物館就先殺到新世紀街，這條晚上都是人XD，大家都把位子拉到戶外坐。</p>

<p><img src="https://lh6.googleusercontent.com/-l1ADhZgcsZw/Up4ttk2XKrI/AAAAAAAAjAI/TNrXDccXgc4/w2346-h1564-no/325A3920.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-SOcpIRxjWt0/UqIXzE7xnXI/AAAAAAAAjDM/MAd80bIgSWM/w2346-h1564-no/325A3922.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-BHQsopcsOjo/UqIXzMrgh4I/AAAAAAAAjDI/y1YfDnu6NAo/w2346-h1564-no/325A3923.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-iZInrqikTDg/Upt-qDPNi1I/AAAAAAAAi74/IAp8kqOJ85E/w2346-h1564-no/325A4074.jpg" alt="" /></p>

<h3>華沙皇宮城堡 Royal Castel</h3>

<p><img src="https://lh3.googleusercontent.com/-JqOQ5FydjkM/UqLjK5u--9I/AAAAAAAAjDo/IS-hf3QKIHQ/w2316-h1544-no/325A3983.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-ru9hUNDOEKQ/Upt-qEVeGDI/AAAAAAAAi-E/q4h1-0IoPBU/w2346-h1564-no/325A3981.jpg" alt="" /></p>

<p>結果殘念&hellip;太晚了沒開0rz</p>

<p><img src="https://lh6.googleusercontent.com/-ePjefo5WN7U/UqHr9DmybcI/AAAAAAAAjA4/2Bx-VoMOsXU/w2346-h1564-no/325A3975.jpg" alt="" /></p>

<h3>古城廣場 Old Town</h3>

<p>古城廣場建於13、14世紀，擴建於15世紀。建築風格為哥德式。17世紀改成巴洛克風格。當時的市政機關、商店、手作工業都集中在這邊。1944年華沙起義，起義的人解放古城，後來被德國炸毀，第二次世界大戰之後，波蘭人重建華沙古城。這邊都保持原先的模樣，內部結構和設施是現代化技術。</p>

<p><img src="https://lh4.googleusercontent.com/-cGWcgCOdzME/UqHr9PIMdWI/AAAAAAAAjA8/O6pt5EXdQ0I/w2346-h1564-no/325A3965.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-T6ToEwjzTZA/Upt-qLJXHgI/AAAAAAAAi48/2hdh1it9988/w2316-h1544-no/325A3970.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-ZmWYwrn_1qY/UqLjK0Nd6tI/AAAAAAAAjDo/EJfW2GcWBkw/w2316-h1544-no/325A3985.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-hhTrNbmxBFU/UqLjK9KGv6I/AAAAAAAAjDo/rxCbvJWm_J8/w2316-h1544-no/325A3986.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-AxYWC4FwHfo/UqLjK2-G7WI/AAAAAAAAjDo/egn4PF2SF9Y/w1030-h1544-no/325A3989.jpg" alt="" /></p>

<h3>美人魚 Syrenka na Starowce</h3>

<p>在1938年成為華沙的代表標識，傳說這位美人魚曾帶領市民對抗入侵華沙的敵人，所以被視為守護神。</p>

<p><img src="https://lh3.googleusercontent.com/-Pjz2uQTOvOI/Upt-qJQd3rI/AAAAAAAAi6A/CVjml67g0Fs/w1050-h1576-no/325A4000.jpg" alt="" /></p>

<h3>耶穌教會堂 Jesuite Church</h3>

<p>文藝復興時期的教堂，緊鄰聖約翰大教堂。它的粉紅色和白色的外牆就是17世紀矯飾的風格。1944年被摧毀，1948~1957年重建。</p>

<p><img src="https://lh4.googleusercontent.com/-X9a-NmBzUOM/UcCCIjujSxI/AAAAAAAAjBE/eeGGbMs6St8/w2346-h1564-no/325A3990.jpg" alt="" /></p>

<h3>聖約翰大教堂 St. Johns Cathedral</h3>

<p>波蘭首都的三大教堂之一。已被聯合國教科文組織列入文化遺產。始建於14世紀的哥德式風格，許多波蘭國王加冕的地方。</p>

<p>維修中XD，就旁邊那個鷹架的那個 (其實是忘記拍0rz&hellip;)</p>

<p><img src="https://lh4.googleusercontent.com/-X9a-NmBzUOM/UcCCIjujSxI/AAAAAAAAjBE/eeGGbMs6St8/w2346-h1564-no/325A3990.jpg" alt="" /></p>

<h3>聖馬丁教堂 St. Martin&rsquo;s Church</h3>

<p>波蘭首都的三大教堂之一。外觀巴洛克風格，裡面就非常現代惹。二戰戰後重建的。</p>

<p><img src="https://lh4.googleusercontent.com/-DbLAF7viN5U/UqITwgRpRvI/AAAAAAAAjBg/mtF64PoeQdE/w2346-h1564-no/325A4004.jpg" alt="" /></p>

<h3>星座時鐘</h3>

<p><img src="https://lh6.googleusercontent.com/-RzcAlp00qEM/Upt-qA-A1ZI/AAAAAAAAi6w/Br-s-l8bmv8/w2346-h1564-no/325A4006.jpg" alt="" /></p>

<p>超酷的立體地圖，立體尖物就是目前所在位置。</p>

<p><img src="https://lh6.googleusercontent.com/-3ce44IBDLYo/Upt-qHiYOmI/AAAAAAAAi9o/2AI5lJA0JPs/w2346-h1564-no/325A4007.jpg" alt="" /></p>

<h3>Jan Kiliński 紀念碑</h3>

<p>Jan Kiliński(1760-1819) 另一個1794華沙起義英雄紀念碑。這個紀念碑是給一個不起眼的鞋匠。在1780年他定居華沙，他於1788年在那裡成為製鞋師傅。</p>

<p><img src="https://lh3.googleusercontent.com/-xUkdrdo-9rs/UqIVHnQF13I/AAAAAAAAjB8/Iid56rH6dcU/w1044-h1574-no/000028700034.jpg" alt="" /></p>

<h3>小叛亂者紀念碑</h3>

<p><img src="https://lh4.googleusercontent.com/-f9-3WFN6R5o/UqIVHiia2MI/AAAAAAAAjCA/FTv1jSngdt8/w1044-h1574-no/000028700038.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-8HXEcD4jkPI/Upt-qKwRE2I/AAAAAAAAi98/LJG_aWSqWC8/w2346-h1564-no/325A4009.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-b1ou05ipwIE/Upt-qPzW3eI/AAAAAAAAi94/2zE1j9i_NQY/w2346-h1564-no/325A4030.jpg" alt="" /></p>

<p>在古城這邊花滿多時間，接著就走回宿舍，印象中好像是還可以接受的距離。</p>

<p><img src="https://lh4.googleusercontent.com/-OZUlyEEfVT8/UqIW3yOMLkI/AAAAAAAAjCQ/od1zZv5oK30/w2346-h1564-no/325A4016.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-oH4Z8lmDEsI/UqIW361fTXI/AAAAAAAAjCs/eL1zH3BEJxM/w2346-h1564-no/325A4020.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-GdMJ3cvm_uI/UqIW3yGCQzI/AAAAAAAAjCc/j7MXIirP_B8/w2346-h1564-no/325A4022.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-bIze9gr3CFE/UqIW3zdM9wI/AAAAAAAAjDA/q2IRUuUq0bo/w2346-h1564-no/325A4023.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-wbcvRcGTMjM/UqIW34xt9SI/AAAAAAAAjCY/4hn2Na8CASs/w2346-h1564-no/325A4029.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-7EI9zz4MtRU/UqIW3_UXFjI/AAAAAAAAjC0/uC_dBuKtNxU/w2346-h1564-no/325A4031.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-sGbehmN1SK8/UqIW3ySxbeI/AAAAAAAAjCo/MV91xWk6c-k/w2346-h1564-no/325A4032.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-YAvNej6RrDw/UqIW392SOzI/AAAAAAAAjCU/cb2bYkNLlIc/w2346-h1564-no/325A4034.jpg" alt="" /></p>

<p>第一天結束&hellip;to be continue</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Alaska - aurora in Fairbanks &amp; polarbear in Barrow]]></title>
    <link href="http://xwaynec.github.io/blog/2013/12/01/alaska-aurora-in-fairbanks-and-polarbear-in-barrow/"/>
    <updated>2013-12-01T15:31:34+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/12/01/alaska-aurora-in-fairbanks-and-polarbear-in-barrow</id>
    <content type="html"><![CDATA[<p><a href="https://picasaweb.google.com/lh/photo/ZUKI83db0qoThznbxHsEebBeowfcvHmxSh0GNvPyVEo?feat=embedwebsite"><img src="https://lh3.googleusercontent.com/-8M52W0_sjWE/UG8mhuMtotI/AAAAAAAAUTk/mzf63gFSGB8/s800/P9255371.jpg" alt="" /></a></p>

<p>畢業之後一直都想去阿拉斯加看極光和北極熊，但是礙於鬼島的研發替代役只能出國8天，只好延後到服完役期，且剛好2012~2013是極光極大期。這次去阿拉斯加總共10天, 其中去Barrow看北極熊是9/24，當天從Fairbanks來回Barrow；剩下九天都在Fairbanks。</p>

<h2>行前準備</h2>

<p>9月的阿拉斯加其實不會冷到靠背，晚上頂多-5℃ ，把去合歡山賞雪的裝備帶一帶就好了…(Barrow除外，這真是可怕的地方，穿兩件褲子還是會從腳底冷上來)，以下是冬天的準備(參考):</p>

<ul>
<li><p>頭部：保暖的帽子（毛線帽或頭套）與圍巾（耳罩可視個人需要準備)護膚乳、護唇膏、太陽眼鏡。若有需要也請帶足量的個人適用常備藥物。</p></li>
<li><p>手部與腳部：厚手套（操作相機時最好還要有薄手套）、棉襪與毛襪（多一層絲襪也能保暖）、登山鞋（底面能止滑，儘量選用防水與保暖的材質，若有多一點的空間還可塞暖暖包）。</p></li>
<li><p>穿著：以「多層式」穿法為宜，因為車子與室內都有暖氣供應，最好能穿脫方便。衣服：長衛生衣褲、毛衣、棉質衣服、厚襯衫、厚羽絨衣外套（能防水最好）。褲子：棉質長褲、牛仔褲，外面若能再罩一件雙層的防風防水褲最好。</p></li>
</ul>


<h3>行程</h3>

<!-- more -->


<p><a href="https://picasaweb.google.com/lh/photo/WrL04VtqMAIZMZtWm9fk8pa4EMZs06f4PvXftOBo-gY?feat=embedwebsite"><img src="https://lh4.googleusercontent.com/-wVeW0YF795w/URtg-QOjTmI/AAAAAAAAbJ0/SbwGDnv_7aU/s800/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-02-13%2520%25E4%25B8%258B%25E5%258D%25885.45.26.png" alt="" /></a></p>

<p>這次阿拉斯加之行去有三個人要飛Barrow，我們三個都是飛機票買了就飛了(神經有大條)，之前看背包客棧的資訊，應該當天來回就可以了，去Barrow真的要不怕花錢(誤)，除了飛機票不便宜(來回機票800USD)，請當地導遊
<strong>每個人是400USD/3hr</strong>，所以這樣就噴掉36k新台幣。不過導遊會開悍馬帶你到真的Point Barrow。</p>

<p>事前做的準備除了機票，大概就在google map上面把Barrow的點都定點一下，Barrow真的不大，走路就可以逛完，是看到滿多taxi在路上晃，不過當時我們聽到導遊費是400USD/3hr之後，接下來都是走路XD，不過有可能是因為當時沒結冰，如果結冰我想我們可能也是小黃趴趴走…</p>

<p><a href="http://www.backpackers.com.tw/forum/showthread.php?t=641885">極地之旅 Barrow, Alaska</a> 這篇裡面介紹的很詳細，我也有跟作者Xavier24聯絡，跟他問當時他找到的當地旅遊的電話。</p>

<h2>Barrow</h2>

<p>早上7:40的飛機，現在如果要從Fairbanks飛Barrow，飛機會在中間停一站是 <a href="http://en.wikipedia.org/wiki/Prudhoe_Bay,_Alaska">Prudhoe Bay</a>。</p>

<p><img src="https://lh5.googleusercontent.com/-89NTQoXTxgs/UG8YP3728lI/AAAAAAAATcg/UQIUuKrGnh8/s640/325A0767.jpg" alt="" /></p>

<p>之前查的資料是說Prudhoe bay大部份是油田採集區，也的確從這邊上下飛機的看起來都是藍領。</p>

<p><img src="https://lh4.googleusercontent.com/-H7X-UnnZs1Y/UG8YsSwLQiI/AAAAAAAATd8/V3OIxOxtv7U/s640/325A0778.jpg" alt="" /></p>

<p>下飛機之後，完全沒空橋XD，請走路到鐵皮屋裡面檢查行李…</p>

<p><img src="https://lh5.googleusercontent.com/-T2tYLwm3RpU/UG8Yz916y9I/AAAAAAAATec/_W-CS9u62Xw/s640/325A0780.jpg" alt="" />
<img src="https://lh4.googleusercontent.com/-xUERh8Ba41k/UG8Y1_BRodI/AAAAAAAATes/i4xCL3zJjkg/s640/325A0782.jpg" alt="" /></p>

<p>檢查完行李就出來，外面有一些locol tour的導遊在外面晃晃，應該也是可以去問看看他們。不過我們有跟Xavier24拿到電話，想說先殺到hostel去打電話。</p>

<p><img src="https://lh3.googleusercontent.com/-wx2jR49Zrpg/UG8Y5B1bv_I/AAAAAAAATe8/wyBEJjBsu9E/s640/325A0784.jpg" alt="" /></p>

<p>Barrow的指標，這邊應該都把能指的都指完了…XD</p>

<p><img src="https://lh3.googleusercontent.com/-WcbPHqg6DTQ/UG8Y-Iv_y6I/AAAAAAAATfI/-Un9dF8Fs5s/s640/325A0786.jpg" alt="" /></p>

<p>路面上的水窪有薄薄的冰</p>

<p><img src="https://lh6.googleusercontent.com/-KetDNvAETgc/UG8Y_a95_iI/AAAAAAAATfU/xv0enaObCZA/s640/325A0787.jpg" alt="" /></p>

<p>我們先去的hostel叫做AirportInn，離機場很近，大概2 blocks的距離。</p>

<p><img src="https://lh6.googleusercontent.com/-U8xUA-etUFE/UG8ZZTJ5lPI/AAAAAAAATgw/sbav7N9QOfE/s640/325A0796.jpg" alt="" /></p>

<p>可以問一下裡面的員工，看有沒有local tour或是直接在佈告欄找找。結果我們找到的電話和Xavier給的是一樣的XD</p>

<p><img src="https://lh3.googleusercontent.com/-eZICcX2xgmQ/UG8ZMHojB5I/AAAAAAAATf8/Yn6Gup6V0Is/s640/325A0791.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-H6OV-kR8XdQ/UG8ZEbeiwMI/AAAAAAAATfg/IQ7dBNS6rnc/s640/325A0789.jpg" alt="" /></p>

<p>白天華氏40度左右</p>

<p><img src="https://lh4.googleusercontent.com/-Px9PKNi0a5k/UG8ZSrxKFhI/AAAAAAAATgY/vyBmaXhbuw0/s640/325A0794.jpg" alt="" /></p>

<p>這個標示我看鬼島應該不太可能有XD</p>

<p><img src="https://lh5.googleusercontent.com/-v1FCRSZPbSw/UG8ZgRtEAbI/AAAAAAAAThI/83117cyW5DQ/s640/325A0799.jpg" alt="" /></p>

<p>警察局</p>

<p><img src="https://lh3.googleusercontent.com/-OqJApiqrehE/UG8aLQxKY5I/AAAAAAAATi4/5fTfFoQFZZ4/s640/325A0812.jpg" alt="" /></p>

<p>到機場已經是11點多，跟導遊約12點半，所以我們就一路先晃到這間店(PEPE’S)來吃。</p>

<p><img src="https://lh4.googleusercontent.com/-mjQuFF5Lsh8/UG8aScvnVLI/AAAAAAAATjU/mk_iv_AAJCM/s640/325A0814.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-RWk-euU0PNw/UG8awCgRjiI/AAAAAAAATkc/8soEukTt7rI/s640/325A0831.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-k1tlZgHml8A/UG8aTnn0GHI/AAAAAAAATjc/QIflJFe8Wok/s640/325A0815.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-ikDyvUOfQOs/UG8aa2rsuEI/AAAAAAAATjk/AZx0CZaRMrw/s640/325A0816.jpg" alt="" /></p>

<p>全美最北端的筆XD，可以拿回家當紀念品</p>

<p><img src="https://lh4.googleusercontent.com/-jvVDwWMLK6g/UG8ar7cFsYI/AAAAAAAATkU/ybbN9zbVQJg/s640/325A0829.jpg" alt="" /></p>

<p>吃飽喝足就回AirportInn等導遊</p>

<p><img src="https://lh3.googleusercontent.com/-A5YTbiqT5F8/UG8ax1Ls9DI/AAAAAAAATko/TuO5PmmIblE/s640/325A0833.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-E22d0_TFnY0/UG8a1mBs-II/AAAAAAAATk8/si5T9T8H400/s640/325A0834.jpg" alt="" /></p>

<p>導遊說，現在每年Eskimo有一定數量可以獵鯨魚的數量(400隻左右，英聽太爛不太確定?!)前幾個禮拜他們獵了一隻鯨魚放在Point Barrow附近，上個禮拜導遊說出團的時候，有看到7~8隻的北極熊!至於為什麼要把鯨魚放在外海，主要原因是希望北極熊不要跑到市區找食物。導遊說他們好像也會獵北極熊(not sure)，話說學長有問，你們現在還會蓋冰屋嗎XD，導遊是說這個已經是傳統技藝，小學的時候都會教，但是現在都住房子了XD</p>

<p>貓頭鷹，頭真的可以轉180度….然後在去Point Barrow的去程，我們看到一隻北極熊!!!超興奮，因為大家都說北極熊大部份出來的時間都是清晨，清晨比較會往南邊找食物。</p>

<p><img src="https://lh5.googleusercontent.com/-qj1dCjRIGvw/UG8bYoxr-MI/AAAAAAAATnI/xBjFfXXfyj0/s640/325A0850.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-7LurzHF1EDE/UG8blim_Z4I/AAAAAAAATn8/9M2-w1oGC8c/s640/325A0858.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-5Tqtct_GzCQ/UG8bmVo9XqI/AAAAAAAAToA/__6EKAlYGhw/s640/325A0859.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-6b9pcQ6bJWM/UG8mKLr57QI/AAAAAAAAUOE/KdcgeRc0AB0/s640/P9255295.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-CxTrKnvTy-0/UG8mJ28lFNI/AAAAAAAAUOA/EensJHAFuCY/s640/P9255294.jpg" alt="" /></p>

<p>一堆海鷗</p>

<p><img src="https://lh4.googleusercontent.com/-RoMja03TRK0/UG8b3fx_rkI/AAAAAAAATpA/jDEOgh8hh3M/s640/325A0865.jpg" alt="" /></p>

<p>北極熊的腳印，導遊說是一大一小，看起來還有其他隻。</p>

<p><img src="https://lh5.googleusercontent.com/-ksPsUni8fBI/UG8b_P3hszI/AAAAAAAATpU/zBtfsgC6G7o/s640/325A0867.jpg" alt="" /></p>

<p>停在point Barrow讓我們下車，車上有開暖氣，車外超級冷…</p>

<p><img src="https://lh5.googleusercontent.com/-VpVybTdLCoY/UR3fDs69zfI/AAAAAAAAbKM/qsgnx4Ayjkw/s640/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-02-15%2520%25E4%25B8%258B%25E5%258D%25883.08.23.png" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-6KiqJnde1X0/UG8ci6zotZI/AAAAAAAATrI/HeOV1WPW5_w/s640/325A0880.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-VSh_JIeR09M/UG8cZ9rxe9I/AAAAAAAATqw/7DvmZPs3IBk/s640/325A0878.jpg" alt="" /></p>

<p>回程看到另一隻啊!!!而且看起來是往我們的車子行徑垂直方向前進XD</p>

<p><img src="https://lh3.googleusercontent.com/-xMz_JJSMC4c/UG8c0Otno_I/AAAAAAAATsU/cKrJb6m6t1o/s640/325A0888.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-75u0gP83FX4/UG8c5elFGqI/AAAAAAAATsk/2Nni9aLhWT4/s640/325A0890.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-UTwdy3xdHCA/UG8dIsDaiII/AAAAAAAATtk/KoDLBsJay1I/s640/325A0896.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-77mLiOvuHpA/UG8dMy53t3I/AAAAAAAATuA/an-4OB9P7J0/s640/325A0898.jpg" alt="" /></p>

<p>導遊說這隻懷孕了，所以我們總共應該是看到3隻XD</p>

<p><img src="https://lh3.googleusercontent.com/-wJFIZHQW0G4/UG8dM2coCQI/AAAAAAAATt8/MTLsU7cTmyw/s640/325A0900.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-NEgATLD_GQM/UG8dU1MWzAI/AAAAAAAATug/A7qcfUsI8q0/s640/325A0901.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-DBdXCfPSdUw/UG8dc7AbH1I/AAAAAAAATu8/qZjyvyGLq00/s640/325A0904.jpg" alt="" /></p>

<p>不管去哪個景點都要踢球的學長…球好像是去南非買的</p>

<p><img src="https://lh6.googleusercontent.com/-wJKQxOt4IyE/UG8d9z83tlI/AAAAAAAATxE/g5DHT7FXJiY/s640/325A0918.jpg" alt="" /></p>

<p>前幾個禮拜的鯨魚屍體，我想會看到北極熊也是因為鯨魚的關係…</p>

<p><img src="https://lh3.googleusercontent.com/-F7kwDpkxBrk/UG8eYVLKn-I/AAAAAAAATyk/GPdXp6OQYCA/s640/325A0935.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-DcHdkyNSb1s/UG8ecTRCCoI/AAAAAAAATy0/9Blv9_OYW08/s640/325A0936.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-9SRRJuSxOI8/UG8euizJcwI/AAAAAAAATzo/nJzijPJTkWU/s640/325A0942.jpg" alt="" /></p>

<p>美帝自以為的Point Barrow，這邊是taxi可以開到的，所以如果是一整天叫一台taxi跑的話，taxi會遊客到的Point barrow是這邊，開悍馬出去當然不一樣…</p>

<p><img src="https://lh6.googleusercontent.com/-JMM-v-6HZR8/UG8fn8n39yI/AAAAAAAAT2s/GaJ5s5oaEmU/s640/325A0979.jpg" alt="" /></p>

<p>剩下來的時間就從Point Barrow延路晃回來，</p>

<p><img src="https://lh6.googleusercontent.com/-9USmWskDcDw/UG8gFhhIGEI/AAAAAAAAT4o/_EE6tBmeXpQ/s640/325A0997.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-CYsKvpJODSg/UG8gQ8t9NVI/AAAAAAAAT5Y/-djqNlPhjpw/s640/325A1004.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-PseAcFs3s18/UG8gacnJB-I/AAAAAAAAT54/XpjIyKTITwI/s640/325A1009.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-iO-FmZhviNk/UG8geqcDnqI/AAAAAAAAT6I/8F6Il8XlREI/s640/325A1010.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-V8dI10my-vs/UG8gflfM4qI/AAAAAAAAT6Y/YJrPT2cxoSA/s640/325A1011.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-ioDmlFJs8gg/UG8givA0TiI/AAAAAAAAT6U/aL_S3F775TA/s640/325A1012.jpg" alt="" /></p>

<p>我們只有租3hr，結束的時候我們請導遊放我們到博物館門口，然後就我們的400USD說掰掰…</p>

<p><img src="https://lh6.googleusercontent.com/-1Mes4tSpAis/UG8hB8LXPCI/AAAAAAAAT8I/HEETQbVS7t0/s640/325A1025.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-dF3xl96SgQc/UG8hGgf5jwI/AAAAAAAAT8g/L5N-YKpEEY8/s640/325A1026.jpg" alt="" /></p>

<p>門票好像5USD?，簽名簿上面早上還有一個亞州女生來，可惜擦肩而過XD，不過女生一個跑來超威</p>

<p><img src="https://lh4.googleusercontent.com/-0Cw6uXSKluE/UG8hGjbqskI/AAAAAAAAT8Y/O4CxfOQmg6E/s640/325A1027.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-Gs_-fhAB2jo/UG8he9dPRgI/AAAAAAAAT9Y/c4LZdGl3sSo/s640/325A1028.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-zZAXRAmiFtI/UG8ha1CSlvI/AAAAAAAAT9M/kDPQkePdtOE/s640/325A1033.jpg" alt="" /></p>

<p>博物館後面有個工藝中心，看起來是制作一些紀念品的地方。</p>

<p><img src="https://lh4.googleusercontent.com/-7FgXgvlUdsA/UG8hs7wJdII/AAAAAAAAT98/vQU7XeDtlS4/s640/325A1040.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-p6Dm9354TM8/UG8hthZtpUI/AAAAAAAAT-A/AVkQEIzLQQQ/s640/325A1041.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-o3f6HOCUuXA/UG8hywa7VWI/AAAAAAAAT-Y/eDzKShEdyvg/s640/325A1043.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-aEy6XHts4hw/UG8h-ApqayI/AAAAAAAAT_A/cmUEH1KqMS0/s640/325A1045.jpg" alt="" /></p>

<p>博物館的旁邊是超市</p>

<p><img src="https://lh4.googleusercontent.com/-stf9u9Z4j7Q/UG8iL_J17pI/AAAAAAAAT_4/9KK89-eq2vQ/s640/325A1051.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-vcsN-trsWJI/UG8iKCHyQAI/AAAAAAAAT_s/iKZf9TfDP4M/s640/325A1053.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-1ReFnRMSVTI/UG8iNL6zuHI/AAAAAAAAUAA/ZcRwS4fiMKI/s640/325A1054.jpg" alt="" /></p>

<p>天氣好到我要縮光圈縮到F13…</p>

<p><img src="https://lh6.googleusercontent.com/-vMT12FuVv_w/UG8iTznDYkI/AAAAAAAAUAU/VcZAWh2fahM/s640/325A1057.jpg" alt="" /></p>

<p>兩個學長發瘋，空手破薄冰</p>

<p><img src="https://lh5.googleusercontent.com/-XmKhubcbD90/UG8ieYBY29I/AAAAAAAAUBE/jW2Da8r8xS4/s640/325A1064.jpg" alt="" /></p>

<p>冷到靠背…</p>

<p><img src="https://lh4.googleusercontent.com/-rDw0ynNUmVs/UG8ikbzXK4I/AAAAAAAAUBc/CM4MlAR4pTw/s640/325A1067.jpg" alt="" /></p>

<p>隨便逛逛就跑到Top of the world，應該是目前唯一的一家Barrow旅行社</p>

<p><img src="https://lh4.googleusercontent.com/-4R-vzo34CB4/UG8ivUMLawI/AAAAAAAAUCE/0g0EYKVnIAU/s640/325A1073.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-JdNseoAvV5w/UG8i2cWSvtI/AAAAAAAAUCc/_DsZ_tpSqLo/s640/325A1076.jpg" alt="" /></p>

<p>日本人的店?</p>

<p><img src="https://lh4.googleusercontent.com/-ssLuo9MVYcY/UG8i7NqESdI/AAAAAAAAUC8/caW7T-EmcYM/s640/325A1078.jpg" alt="" /></p>

<p>賣紀念品的店</p>

<p><img src="https://lh6.googleusercontent.com/-eWaw5VYZt9g/UG8i_967DzI/AAAAAAAAUDQ/iOfQ86R9HyQ/s640/325A1080.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-FpjTnvjieAQ/UG8jCb1EvOI/AAAAAAAAUDc/GiFGotTVHhY/s640/325A1081.jpg" alt="" /></p>

<p>晃一整天超累，然後肚子又餓惹，上飛機之前再吃一餐。</p>

<p><img src="https://lh4.googleusercontent.com/-TmNzhzDiIUA/UG8jGHVAb2I/AAAAAAAAUDw/8XT_rbNovHE/s640/325A1083.jpg" alt="" /></p>

<p>價錢還可以接受，pizza真的是靠背大，吃不完XD</p>

<p><img src="https://lh5.googleusercontent.com/-GIQUKFRiTUA/UG8jKe_QsHI/AAAAAAAAUD8/NWCM58jccEI/s640/325A1085.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-chX6Kf4yJNg/UG8jMTTlEiI/AAAAAAAAUEI/jNZ2Ip98Pts/s640/325A1086.jpg" alt="" /></p>

<p>Goodbye Barrow，謝謝讓我看到北極熊</p>

<p><img src="https://lh5.googleusercontent.com/-haRsxQtuCRA/UG8jTAodb_I/AAAAAAAAUEo/NRVVI_CFBn8/s640/325A1089.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-mDIAQ-h_IYM/UG8jW8Q2byI/AAAAAAAAUE0/76A-UHj_BwU/s640/325A1090.jpg" alt="" /></p>

<p>小鬼一直拿他的登機箱撞我…</p>

<p><img src="https://lh6.googleusercontent.com/-vZUw8xTMBwk/UG8jfjh0YhI/AAAAAAAAUFE/IygQUbxcIpg/s640/325A1091.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-zezzqXU84YY/UG8jfPnbaXI/AAAAAAAAUFA/lfXdakLkaz4/s640/325A1092.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-MV8XVWaZ4PQ/UG8jhP-ihmI/AAAAAAAAUFQ/Pwoj58zenfE/s640/325A1093.jpg" alt="" /></p>

<p>上飛機要回Fairbanks看極光了</p>

<p><img src="https://lh5.googleusercontent.com/-fsPP1WeJJLI/UG8joficd2I/AAAAAAAAUFo/-YEWK9rE-Jw/s640/325A1097.jpg" alt="" /></p>

<p><img src="https://lh3.googleusercontent.com/-t3mZDwa8kj0/UG8jwWWibeI/AAAAAAAAUGE/sk80g-L-Gno/s640/325A1099.jpg" alt="" /></p>

<p><img src="https://lh5.googleusercontent.com/-2WsnOPWrZ2I/UG8ju_Uaw8I/AAAAAAAAUF8/HcVe0OV4cKg/s640/325A1100.jpg" alt="" /></p>

<p>回飯店之後車開了就先衝去chena lake，一開始還不明顯</p>

<p><img src="https://lh5.googleusercontent.com/-EMS4RSfky8c/UG8kYH_9FnI/AAAAAAAAUIQ/GkgdwPZqoUk/s640/325A1131.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-Nh_NkWQj8CU/UG8kk4_tl3I/AAAAAAAAUI0/asIYZd0p7zA/s640/325A1146.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-f8iEXbkrQl8/UG8kruvUWYI/AAAAAAAAUJM/ZWWO2lNwVHQ/s640/325A1153-2.jpg" alt="" /></p>

<p>接著就爆發啦XDD</p>

<p><img src="https://lh5.googleusercontent.com/-KYEgz9HORVQ/UG8kuvE_XqI/AAAAAAAAUJU/DtgDryQzgJ0/s640/325A1160.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-u5sIDMG8cqg/UG8k_0o3QeI/AAAAAAAAUKI/UN5i4W6ED7s/s640/325A1168.jpg" alt="" /></p>

<p>我們後來還跑去University of Alask的Large Animal Research Station</p>

<p><img src="https://lh4.googleusercontent.com/-ZBGuIILc0Us/UG8lk8IZDZI/AAAAAAAAUL4/-zz_6zk0AI8/s640/325A1193.jpg" alt="" /></p>

<p><img src="https://lh6.googleusercontent.com/-SZ-FacgSX3g/UG8lsgIo1vI/AAAAAAAAUMU/A5Ft0uHV2H0/s640/325A1199.jpg" alt="" /></p>

<p><img src="https://lh4.googleusercontent.com/-CF4H3tvBRA8/UG8lyuUuC-I/AAAAAAAAUMg/oijo8ueqebk/s640/325A1200.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ACM: 302 - John's trip]]></title>
    <link href="http://xwaynec.github.io/blog/2013/11/30/acm-302-johns-trip/"/>
    <updated>2013-11-30T02:59:15+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/11/30/acm-302-johns-trip</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include&lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* John&#39;s trip  */</span>
</span><span class='line'><span class="kt">int</span> <span class="n">count</span><span class="p">,</span><span class="n">visited</span><span class="p">,</span><span class="n">totalnode</span><span class="p">,</span><span class="n">stack</span><span class="p">,</span><span class="n">startPoint</span><span class="p">;;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">adj</span><span class="p">[</span><span class="mi">4000</span><span class="p">],</span><span class="n">degree</span><span class="p">[</span><span class="mi">4000</span><span class="p">],</span><span class="n">boundary</span><span class="p">[</span><span class="mi">4000</span><span class="p">],</span><span class="n">edge</span><span class="p">[</span><span class="mi">4000</span><span class="p">],</span><span class="n">used</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">S</span><span class="p">[</span><span class="mi">500000</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">group</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">head</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">tail</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">street</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="n">group</span><span class="p">[</span><span class="mi">4000</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">node</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">adj</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">bound</span><span class="p">;</span>  <span class="cm">/* bound = adj+degree */</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">degree</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">color</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="n">vertex</span><span class="p">[</span><span class="mi">100</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">comp_func</span><span class="p">(</span> <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span> <span class="n">a</span><span class="p">,</span> <span class="k">const</span> <span class="kt">void</span> <span class="o">*</span> <span class="n">b</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">group</span> <span class="n">c</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="k">struct</span> <span class="n">group</span> <span class="o">*</span><span class="p">)</span> <span class="n">a</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">group</span> <span class="n">d</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="k">struct</span> <span class="n">group</span> <span class="o">*</span><span class="p">)</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">c</span><span class="p">.</span><span class="n">head</span> <span class="o">-</span> <span class="n">d</span><span class="p">.</span><span class="n">head</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class='line'>  <span class="n">x</span> <span class="o">=</span> <span class="n">c</span><span class="p">.</span><span class="n">street</span> <span class="o">-</span> <span class="n">d</span><span class="p">.</span><span class="n">street</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">DFS</span><span class="p">(</span><span class="kt">int</span> <span class="n">v</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>  <span class="n">visited</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>  <span class="n">used</span><span class="p">[</span><span class="n">v</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">adj</span><span class="p">[</span><span class="n">v</span><span class="p">];</span><span class="n">i</span><span class="o">&lt;</span><span class="n">boundary</span><span class="p">[</span><span class="n">v</span><span class="p">];</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">used</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">DFS</span><span class="p">(</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">find_circuit</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">j</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">degree</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">adj</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="n">j</span><span class="o">&lt;</span><span class="n">boundary</span><span class="p">[</span><span class="n">i</span><span class="p">];</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">edge</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">street</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>            <span class="n">edge</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">street</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>            <span class="n">degree</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">head</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>            <span class="n">degree</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">tail</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>            <span class="n">find_circuit</span><span class="p">(</span><span class="n">group</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">tail</span><span class="p">);</span>
</span><span class='line'>            <span class="n">S</span><span class="p">[</span><span class="n">stack</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="n">group</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">street</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">build_adj</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">cnt</span><span class="p">,</span><span class="n">inode</span><span class="p">,</span><span class="n">step2</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">count_node</span><span class="p">[</span><span class="mi">4000</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span> <span class="n">group</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">head</span> <span class="o">&gt;</span> <span class="n">group</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">tail</span> <span class="p">)</span>
</span><span class='line'>    <span class="n">startPoint</span> <span class="o">=</span> <span class="n">group</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">tail</span><span class="p">;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">startPoint</span> <span class="o">=</span> <span class="n">group</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">head</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">qsort</span><span class="p">(</span><span class="n">group</span><span class="p">,</span><span class="n">count</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">group</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="n">comp_func</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">4000</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="n">adj</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">boundary</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">degree</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">count_node</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">j</span><span class="o">=</span><span class="n">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="cm">/*build adjacency*/</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">count</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">while</span><span class="p">((</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="o">==</span><span class="n">group</span><span class="p">[</span><span class="n">j</span><span class="p">].</span><span class="n">head</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">j</span><span class="o">&lt;</span><span class="n">count</span><span class="p">)){</span>
</span><span class='line'>            <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">j</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">adj</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>        <span class="n">degree</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">]</span> <span class="o">=</span> <span class="n">cnt</span><span class="p">;</span>
</span><span class='line'>        <span class="n">boundary</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">]</span><span class="o">=</span> <span class="n">adj</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">]</span> <span class="o">+</span> <span class="n">degree</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">];</span>
</span><span class='line'>        <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">i</span> <span class="o">=</span> <span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/*find how mand nodes*/</span>
</span><span class='line'>    <span class="n">totalnode</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">degree</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">adj</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">bound</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">color</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">count</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="n">count_node</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">count_node</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">].</span><span class="n">degree</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">].</span><span class="n">degree</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">].</span><span class="n">adj</span><span class="o">=</span><span class="n">adj</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">];</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">].</span><span class="n">adj</span><span class="o">=</span><span class="n">adj</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">];</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">].</span><span class="n">bound</span><span class="o">=</span><span class="n">boundary</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">head</span><span class="p">];</span>
</span><span class='line'>        <span class="n">vertex</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">].</span><span class="n">bound</span><span class="o">=</span><span class="n">boundary</span><span class="p">[</span><span class="n">group</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">tail</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">count_node</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'>            <span class="n">totalnode</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>            <span class="n">vertex</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">degree</span><span class="o">/=</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">visited</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>        <span class="n">used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">DFS</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">step2</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">visited</span><span class="o">!=</span><span class="n">totalnode</span><span class="p">)</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span> <span class="s">&quot;Round trip does not exist.</span><span class="se">\n</span><span class="s">&quot;</span> <span class="p">);</span>
</span><span class='line'>    <span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">count_node</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'>                <span class="k">if</span><span class="p">((</span><span class="n">vertex</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">degree</span><span class="o">%</span><span class="mi">2</span><span class="p">)</span><span class="o">!=</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>                    <span class="n">printf</span><span class="p">(</span> <span class="s">&quot;Round trip does not exist.</span><span class="se">\n</span><span class="s">&quot;</span> <span class="p">);</span>
</span><span class='line'>                    <span class="n">step2</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">break</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">step2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>            <span class="n">stack</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">4000</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>                <span class="n">edge</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="n">find_circuit</span><span class="p">(</span><span class="n">startPoint</span><span class="p">);</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="n">stack</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">--</span><span class="p">)</span>
</span><span class='line'>                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d &quot;</span><span class="p">,</span><span class="n">S</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>
</span><span class='line'>            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">S</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">node1</span><span class="p">,</span><span class="n">node2</span><span class="p">,</span><span class="n">strt</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">flag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;302.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">totalnode</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">node1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">node2</span><span class="p">)</span><span class="o">==</span><span class="mi">2</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">node1</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">flag</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>            <span class="k">else</span><span class="p">{</span>
</span><span class='line'>                <span class="n">flag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>                <span class="n">build_adj</span><span class="p">();</span>
</span><span class='line'>                <span class="n">count</span> <span class="o">=</span> <span class="n">totalnode</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">strt</span><span class="p">);</span>
</span><span class='line'>        <span class="n">group</span><span class="p">[</span><span class="n">count</span><span class="p">].</span><span class="n">head</span> <span class="o">=</span> <span class="n">node1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">group</span><span class="p">[</span><span class="n">count</span><span class="p">].</span><span class="n">tail</span> <span class="o">=</span> <span class="n">node2</span><span class="p">;</span>
</span><span class='line'>        <span class="n">group</span><span class="p">[</span><span class="n">count</span><span class="o">++</span><span class="p">].</span><span class="n">street</span> <span class="o">=</span> <span class="n">strt</span><span class="p">;</span>
</span><span class='line'>        <span class="n">group</span><span class="p">[</span><span class="n">count</span><span class="p">].</span><span class="n">head</span> <span class="o">=</span> <span class="n">node2</span><span class="p">;</span>
</span><span class='line'>        <span class="n">group</span><span class="p">[</span><span class="n">count</span><span class="p">].</span><span class="n">tail</span> <span class="o">=</span> <span class="n">node1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">group</span><span class="p">[</span><span class="n">count</span><span class="o">++</span><span class="p">].</span><span class="n">street</span> <span class="o">=</span> <span class="n">strt</span><span class="p">;</span>
</span><span class='line'>        <span class="n">flag</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[activemerchant allpay plugin for Taiwan payment]]></title>
    <link href="http://xwaynec.github.io/blog/2013/11/28/activemerchant-allpay-plugin-for-taiwan-payment/"/>
    <updated>2013-11-28T04:04:25+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/11/28/activemerchant-allpay-plugin-for-taiwan-payment</id>
    <content type="html"><![CDATA[<h1>ActiveMerchantAllpay</h1>

<p>This plugin is an active_merchant patch forAllpay(歐付寶) online payment in Taiwan.
Now it supports Credit card(信用卡), ATM(虛擬ATM) and CVS(超商繳費).</p>

<h2>Installation</h2>

<p>Add this line to your application&rsquo;s Gemfile:</p>

<pre><code>gem 'activemerchant'
gem 'active_merchant_allpay', '&gt;=0.1.0'
</code></pre>

<p>And then execute:</p>

<pre><code>$ bundle install
</code></pre>

<p>Or install it yourself as:</p>

<pre><code>$ gem install activemerchant
$ gem install active_merchant_allpay
</code></pre>

<h2>Usage</h2>

<!-- more -->


<p>You can get Payment API and SPEC in <a href="http://www.allpay.com.tw/Service/API">Allpay API</a>.
First, configure the integration mode depends on what enviroment you want to use.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/environments/development.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">after_initialize</span> <span class="k">do</span>
</span><span class='line'>  <span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">integration_mode</span> <span class="o">=</span> <span class="ss">:development</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># config/environments/production.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">after_initialize</span> <span class="k">do</span>
</span><span class='line'>  <span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">integration_mode</span> <span class="o">=</span> <span class="ss">:production</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then create an initializer, like initializers/allpay.rb. Add the following configurations depends on your settings.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="ss">Integrations</span><span class="p">:</span><span class="ss">:Allpay</span><span class="o">.</span><span class="n">setup</span> <span class="k">do</span> <span class="o">|</span><span class="n">allpay</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</span><span class='line'>    <span class="n">allpay</span><span class="o">.</span><span class="n">merchant_id</span> <span class="o">=</span> <span class="s1">&#39;5566183&#39;</span>
</span><span class='line'>    <span class="n">allpay</span><span class="o">.</span><span class="n">hash_key</span>    <span class="o">=</span> <span class="s1">&#39;56cantdieohyeah&#39;</span>
</span><span class='line'>    <span class="n">allpay</span><span class="o">.</span><span class="n">hash_iv</span>     <span class="o">=</span> <span class="s1">&#39;183club&#39;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">allpay</span><span class="o">.</span><span class="n">merchant_id</span> <span class="o">=</span> <span class="s1">&#39;7788520&#39;</span>
</span><span class='line'>    <span class="n">allpay</span><span class="o">.</span><span class="n">hash_key</span>    <span class="o">=</span> <span class="s1">&#39;adfas123412343j&#39;</span>
</span><span class='line'>    <span class="n">allpay</span><span class="o">.</span><span class="n">hash_iv</span>     <span class="o">=</span> <span class="s1">&#39;123ddewqerasdfas&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Example Usage</h2>

<p>Now support three payment methods:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># 1. Credit card</span>
</span><span class='line'>  <span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="ss">Integrations</span><span class="p">:</span><span class="ss">:Allpay</span><span class="o">::</span><span class="no">PAYMENT_CREDIT_CARD</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 2. ATM</span>
</span><span class='line'>  <span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="ss">Integrations</span><span class="p">:</span><span class="ss">:Allpay</span><span class="o">::</span><span class="no">PAYMENT_ATM</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 3. CVS (convenience store)</span>
</span><span class='line'>  <span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="ss">Integrations</span><span class="p">:</span><span class="ss">:Allpay</span><span class="o">::</span><span class="no">PAYMENT_CVS</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once you’ve configured ActiveMerchantAllpay, you need a checkout form; it looks like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="o">&lt;</span><span class="sx">% payment_service_for </span> <span class="vi">@order</span><span class="p">,</span>
</span><span class='line'>                          <span class="vi">@order</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
</span><span class='line'>                          <span class="ss">:service</span> <span class="o">=&gt;</span> <span class="ss">:allpay</span><span class="p">,</span>
</span><span class='line'>                          <span class="ss">:html</span>    <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s1">&#39;allpay-atm-form&#39;</span><span class="p">,</span> <span class="ss">:method</span> <span class="o">=&gt;</span> <span class="ss">:post</span> <span class="p">}</span> <span class="k">do</span> <span class="o">|</span><span class="n">service</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">    &lt;% service.merchant_trade_no @order.payments.last.identifier %&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% service.merchant_trade_date </span><span class="vi">@order</span><span class="o">.</span><span class="n">created_at</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;% service.total_amount @order.total.to_i %&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% service.trade_desc </span><span class="vi">@order</span><span class="o">.</span><span class="n">number</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;% service.item_name @order.number %&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% service.choose_payment </span><span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="ss">Integrations</span><span class="p">:</span><span class="ss">:Allpay</span><span class="o">::</span><span class="no">PAYMENT_ATM</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;% service.client_back_url spree.orders_account_url %&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% service.return_url </span><span class="n">allpay_atm_return_url</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;% service.encrypted_data %&gt;</span>
</span><span class='line'>    <span class="o">&lt;%=</span> <span class="n">submit_tag</span> <span class="s1">&#39;Buy!&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also need a notification action when Allpay service notifies your server; it looks like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">notify</span>
</span><span class='line'>    <span class="n">notification</span> <span class="o">=</span> <span class="ss">ActiveMerchant</span><span class="p">:</span><span class="ss">:Billing</span><span class="o">::</span><span class="ss">Integrations</span><span class="p">:</span><span class="ss">:Allpay</span><span class="o">::</span><span class="no">Notification</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">order</span> <span class="o">=</span> <span class="no">Order</span><span class="o">.</span><span class="n">find_by_number</span><span class="p">(</span><span class="n">notification</span><span class="o">.</span><span class="n">merchant_trade_no</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">notification</span><span class="o">.</span><span class="n">status</span> <span class="o">&amp;&amp;</span> <span class="n">notification</span><span class="o">.</span><span class="n">checksum_ok?</span>
</span><span class='line'>      <span class="c1"># payment is compeleted</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="c1"># payment is failed</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">render</span> <span class="ss">text</span><span class="p">:</span> <span class="s1">&#39;1|OK&#39;</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="mi">200</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Contributing</h2>

<ol>
<li>Fork it</li>
<li>Create your feature branch (<code>git checkout -b my-new-feature</code>)</li>
<li>Commit your changes (<code>git commit -am 'Add some feature'</code>)</li>
<li>Push to the branch (<code>git push origin my-new-feature</code>)</li>
<li>Create new Pull Request</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ACM: 294 - Divisors]]></title>
    <link href="http://xwaynec.github.io/blog/2013/11/23/acm-294-divisors/"/>
    <updated>2013-11-23T18:02:17+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/11/23/acm-294-divisors</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include&lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;math.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;memory.h&gt;</span>
</span><span class='line'><span class="cm">/*Divisors */</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">sample</span><span class="p">,</span><span class="n">lower</span><span class="p">,</span><span class="n">upper</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">s</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">m</span><span class="p">,</span><span class="n">max</span><span class="p">,</span><span class="n">maxnum</span><span class="p">,</span><span class="n">divisor</span><span class="p">,</span><span class="n">prime</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">is_prime</span><span class="p">[</span><span class="mi">31623</span><span class="p">];</span>
</span><span class='line'>    <span class="n">memset</span><span class="p">(</span><span class="n">is_prime</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">31623</span><span class="p">);</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">31623</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">is_prime</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="n">i</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="mi">31623</span><span class="p">;</span><span class="n">k</span><span class="o">=</span><span class="n">k</span><span class="o">+</span><span class="n">i</span><span class="p">){</span>
</span><span class='line'>                <span class="n">is_prime</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">freopen</span><span class="p">(</span><span class="s">&quot;294.in&quot;</span><span class="p">,</span><span class="s">&quot;r&quot;</span><span class="p">,</span><span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">sample</span><span class="p">);</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">sample</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">lower</span><span class="p">,</span><span class="o">&amp;</span><span class="n">upper</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Between %d and %d, &quot;</span><span class="p">,</span><span class="n">lower</span><span class="p">,</span><span class="n">upper</span><span class="p">);</span>
</span><span class='line'>        <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)(</span><span class="n">sqrt</span><span class="p">(</span><span class="n">upper</span><span class="p">)</span><span class="o">+</span><span class="mf">0.001</span><span class="p">);</span>
</span><span class='line'>        <span class="n">max</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">maxnum</span> <span class="o">=</span> <span class="n">lower</span><span class="p">;</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">s</span><span class="o">=</span><span class="n">lower</span><span class="p">;</span><span class="n">s</span><span class="o">&lt;=</span><span class="n">upper</span><span class="p">;</span><span class="n">s</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'>            <span class="n">divisor</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>            <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">m</span><span class="o">&amp;&amp;</span><span class="n">tmp</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>                <span class="k">if</span><span class="p">((</span><span class="n">is_prime</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">tmp</span><span class="o">%</span><span class="n">j</span><span class="o">==</span><span class="mi">0</span><span class="p">)){</span>
</span><span class='line'>                    <span class="n">prime</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">while</span><span class="p">(</span><span class="n">tmp</span><span class="o">%</span><span class="n">j</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>                        <span class="n">prime</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>                        <span class="n">tmp</span> <span class="o">=</span> <span class="n">tmp</span> <span class="o">/</span> <span class="n">j</span><span class="p">;</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                    <span class="n">divisor</span> <span class="o">=</span> <span class="n">divisor</span> <span class="o">*</span> <span class="p">(</span><span class="n">prime</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">tmp</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                <span class="n">divisor</span> <span class="o">=</span> <span class="n">divisor</span> <span class="o">*</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="n">divisor</span> <span class="o">&gt;</span> <span class="n">max</span><span class="p">){</span>
</span><span class='line'>                <span class="n">max</span> <span class="o">=</span> <span class="n">divisor</span><span class="p">;</span>
</span><span class='line'>                <span class="n">maxnum</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d has a maximum of %d divisors.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">maxnum</span><span class="p">,</span><span class="n">max</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ACM: 242 - stamp and envelope]]></title>
    <link href="http://xwaynec.github.io/blog/2013/11/22/acm-242-stamp-and-envelope/"/>
    <updated>2013-11-22T14:03:46+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/11/22/acm-242-stamp-and-envelope</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define INFINITE 2000</span>
</span><span class='line'><span class="cm">/*Stamps and Envelope Size */</span>
</span><span class='line'><span class="cm">/* global variable */</span>
</span><span class='line'><span class="kt">int</span> <span class="n">s</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">set</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">15</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">N</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">f</span><span class="p">[</span><span class="mi">1010</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">temp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* freopen(&quot;242.in&quot;, &quot;r&quot;, stdin); */</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="n">s</span><span class="o">!=</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>  <span class="cm">/* read input */</span>
</span><span class='line'>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;=</span> <span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* DP for n sets of stamp */</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>    <span class="n">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="cm">/* find max coverage */</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>    <span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">INFINITE</span><span class="p">;</span>
</span><span class='line'>    <span class="cm">/* dynamic programing */</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span> <span class="n">k</span> <span class="o">&gt;</span><span class="mi">0</span><span class="p">;</span> <span class="n">k</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>      <span class="n">temp</span><span class="o">=</span><span class="n">j</span><span class="o">-</span><span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">k</span><span class="p">];</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="n">temp</span><span class="o">=</span><span class="n">f</span><span class="p">[</span><span class="n">temp</span><span class="p">]</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">temp</span><span class="o">&lt;</span> <span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
</span><span class='line'>        <span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">temp</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="cm">/* check terminate or not */</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">&gt;</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'>      <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">N</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* print out */</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">temp</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">N</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span><span class="n">N</span><span class="p">[</span><span class="n">temp</span><span class="p">])</span>
</span><span class='line'>    <span class="n">temp</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">N</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">N</span><span class="p">[</span><span class="n">temp</span><span class="p">]){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;</span> <span class="n">set</span><span class="p">[</span><span class="n">temp</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>      <span class="n">temp</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="n">set</span><span class="p">[</span><span class="n">temp</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">set</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]]</span><span class="o">&lt;</span> <span class="n">set</span><span class="p">[</span><span class="n">temp</span><span class="p">][</span><span class="n">set</span><span class="p">[</span><span class="n">temp</span><span class="p">][</span><span class="mi">0</span><span class="p">]])</span>
</span><span class='line'>      <span class="n">temp</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;max coverage = %3d :&quot;</span><span class="p">,</span> <span class="n">N</span><span class="p">[</span><span class="n">temp</span><span class="p">]);</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span> <span class="n">set</span><span class="p">[</span><span class="n">temp</span><span class="p">][</span><span class="mi">0</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%3d&quot;</span><span class="p">,</span> <span class="n">set</span><span class="p">[</span><span class="n">temp</span><span class="p">][</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ACM: 166 – Making Change]]></title>
    <link href="http://xwaynec.github.io/blog/2013/11/17/acm-166-making-change/"/>
    <updated>2013-11-17T00:53:00+08:00</updated>
    <id>http://xwaynec.github.io/blog/2013/11/17/acm-166-making-change</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include&lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include&lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#define UBOUND 1000000</span>
</span><span class='line'><span class="cm">/*Making Change  */</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">unlimited</span><span class="p">[</span><span class="mi">105</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">coins</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">40</span><span class="p">};</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">limited</span><span class="p">[</span><span class="mi">6</span><span class="p">][</span><span class="mi">145</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">used</span><span class="p">[</span><span class="mi">145</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">p1</span><span class="p">,</span><span class="n">p2</span><span class="p">,</span><span class="n">price</span><span class="p">;</span>
</span><span class='line'>  <span class="n">unlimited</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="mi">100</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="n">unlimited</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">UBOUND</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="mi">100</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">coins</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">&gt;</span><span class="n">i</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">unlimited</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">coins</span><span class="p">[</span><span class="n">j</span><span class="p">]]</span><span class="o">+</span><span class="mi">1</span><span class="o">&lt;</span><span class="n">unlimited</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class='line'>        <span class="n">unlimited</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">unlimited</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">coins</span><span class="p">[</span><span class="n">j</span><span class="p">]]</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(;;){</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">total</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">min</span><span class="p">,</span><span class="n">minj</span><span class="p">,</span><span class="n">max</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="mi">140</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">limited</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]),</span><span class="n">total</span><span class="o">+=</span><span class="n">limited</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="n">coins</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">total</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%*c%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">p1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">p2</span><span class="p">);</span>
</span><span class='line'>    <span class="n">price</span><span class="o">=</span><span class="n">p1</span><span class="o">*</span><span class="mi">20</span><span class="o">+</span><span class="n">p2</span><span class="o">/</span><span class="mi">5</span><span class="p">;</span>
</span><span class='line'>    <span class="n">max</span><span class="o">=</span><span class="n">total</span><span class="o">&gt;</span><span class="n">price</span><span class="o">+</span><span class="mi">40</span><span class="o">?</span><span class="n">price</span><span class="o">+</span><span class="mi">40</span><span class="o">:</span><span class="n">total</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">max</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>      <span class="n">min</span><span class="o">=</span><span class="n">UBOUND</span><span class="p">;</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">coins</span><span class="p">[</span><span class="n">j</span><span class="p">]</span><span class="o">&gt;</span><span class="n">i</span><span class="o">||</span><span class="n">limited</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="n">coins</span><span class="p">[</span><span class="n">j</span><span class="p">]]</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">used</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">coins</span><span class="p">[</span><span class="n">j</span><span class="p">]]</span><span class="o">+</span><span class="mi">1</span><span class="o">&lt;</span><span class="n">min</span><span class="p">)</span> <span class="n">min</span><span class="o">=</span><span class="n">used</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">coins</span><span class="p">[</span><span class="n">j</span><span class="p">]]</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">minj</span><span class="o">=</span><span class="n">j</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">min</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">min</span><span class="o">&lt;</span><span class="n">UBOUND</span><span class="p">){</span>
</span><span class='line'>        <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>          <span class="n">limited</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">limited</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="o">-</span><span class="n">coins</span><span class="p">[</span><span class="n">minj</span><span class="p">]];</span>
</span><span class='line'>        <span class="n">limited</span><span class="p">[</span><span class="n">minj</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">min</span><span class="o">=</span><span class="n">UBOUND</span><span class="p">;</span>
</span><span class='line'>    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="n">price</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">max</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">unlimited</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">price</span><span class="p">]</span><span class="o">&lt;</span><span class="n">min</span><span class="p">)</span>
</span><span class='line'>        <span class="n">min</span><span class="o">=</span><span class="n">used</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">unlimited</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">price</span><span class="p">];</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%3d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">min</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
